section {
    background-color: #6d6875;
    width: 800px;
    height: 800px;
}

div {
    background-color: #e5989b;
    /* 너비와 높이는 부모 요소를 기준으로 삼음. 부모 요소의 높이, 너비 50% */
    width: 50%;
    height: 50%;
}

h1 {
    font-size: 40px;
    border: 1px solid black;
    /* line-height는 부모와 상관없이 요소 자체의 기준값으로 font의 2배가 되도록 함 */
    line-height: 200%;
}

/* ✅ em : 상대적 단위 */
/* em은 비율을 유지한채 변화를 주기위한 단위로 보임. 반응형과는 다름 */
/* px은 하나하나 변경해야 하지만, em은 글꼴 크기가 바뀜에 따라 자동적으로 달리짐 */
/* 1em : 부모(or 특정 요소) 요소와 동일 */
/* 2em : 부모(or 특정 요소) 요소의 2배 */
#ems p {
    font-size: 1em;
}

article {
    font-size: 10px;

}

#ems h2 {
    /* font 크기의 em은 부모 요소의 글꼴 크기에 좌우됨 */
    font-size: 2em;
    /* margin의 em은 요소의 글꼴 크기에 좌우됨 */
    margin: 1em;
}

#ems h3 {
    font-size: 1.5em;
}

#ems {
    font-size: 15px;
}

button {
    /* 절대값인 px은 비례해서 변경이 안됨
    font-size: 30px;
    padding: 0 30px;
    border-radius: 15px; */
    font-size: 1em;
    padding: 0 1em;
    border-radius: 0.5em;
    background-color: #2a9d8f;
    color: white;
}

/* ✅ rem : Root EMS */
/* em의 문제점
: 목록 중첩 시 누적되어 단계별로 커지거나 작아짐 (중복 ul의 경우/ ul 부모의 1.5배 -> 그 ul의 1.5배) */
/* 루트 HTML 요소의 글씨 크기에 따라 바꾸는 것이 다른 점 */
/* 문서 전체에서 하나의 글꼴 크기에 비례하여 바뀐다는 뜻 */
/* ex) 루트 HTML 요소의 글꼴 크기가 20px이면 1rem은 문서의 어디에 있든 중첩을 시키든 항상 20px */
/* ul {
    font-size: 1.5em;
} */
/* rem은 기준을 만들고 거기에 비례해서 변경되는 규격 */

/* 루트 요소의 글꼴 크기를 결정 */
html {
    font-size: 20px;
} 

#rems h2{
    font-size: 3rem;
}

#rems h3{
    font-size: 2rem;
}

#rems ul{
    font-size: 0.8rem;
}

#rems button{
    font-size: 1.5rem;
}

/* ✅ em, rem 둘 다 장단점이 존재, 상황에 맞게 적용할 것 */
/* 글꼴 크기에 변경하는 테두리 반경의 경우 em */
/* 중첩 목록과 같이 기준점에 맞게 일괄 크기 적용이 필요한 경우 rem */